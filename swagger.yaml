swagger: '2.0'
info:
  title: Smart SMS API Specification
  description: >-
    The official API documentation for smart-sms. You will need to have a running instance of the [smart-sms](https://github.com/micahoriaso/smart-sms) to test these API endpoints on your local environment.
  version: 1.0.0
basePath: /
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Performs user registration
      description: 'Performs user registration'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Registration parameters
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Micah
              phoneNumber:
                type: string
                example: '9567897645'
              password:
                type: string
                example: '123456789'
      responses:
        '201':
          description: CREATED
      security:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Performs user login
      description: 'Performs user login'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Login parameters
          required: true
          schema:
            type: object
            properties:
              phoneNumber:
                type: string
                example: '9567897645'
              password:
                type: string
                example: '123456789'
      responses:
        '200':
          description: OK
      security:

  /contacts:
    get:
      security:
        - Bearer: []
      tags:
        - Contacts
      summary: Get user contacts
      description: Get user contacts
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
    post:
      security:
        - Bearer: []
      tags:
        - Contacts
      summary: Create a contact
      description: Create a contact
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Contact's phone number
          required: true
          schema:
            type: object
            properties:
              phoneNumber:
                type: string
                example: '9567897643'
      responses:
        '201':
          description: CREATED
        '401':
          description: Unauthorized
        '404':
          description: User does not exist
  /contacts/{phoneNumber}:
    put:
      security:
        - Bearer: []
      tags:
        - Contacts
      summary: Update a contact
      description: Update a contact
      produces:
        - application/json
      parameters:
        - in: path
          name: phoneNumber
          description: Phone number of the contact
          required: true
          schema:
            type: string
        - in: body
          name: message
          description: Contact's name
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: 'Julien'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Contact not found
    get:
      security:
        - Bearer: []
      tags:
        - Contacts
      summary: Get contact details
      description: Get contact details
      produces:
        - application/json
      parameters:
        - in: path
          name: phoneNumber
          description: Phone number of the contact
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Contact not found
    delete:
      security:
        - Bearer: []
      tags:
        - Contacts
      summary: Delete a contact
      description: Delete a contact
      produces:
        - application/json
      parameters:
        - in: path
          name: phoneNumber
          description: Phone number of the contact
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Contact not found

  /messages:
    get:
      security:
        - Bearer: []
      tags:
        - Messages
      summary: Get user's messages
      description: Get user's messages
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
    post:
      security:
        - Bearer: []
      tags:
        - Messages
      summary: Send a message
      description: Send a message
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Message parameters
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                example: 'Hello there!'
              toId:
                type: string
                example: '9567897643'
      responses:
        '201':
          description: CREATED
        '401':
          description: Unauthorized
        '404':
          description: Contact does not exist
  /messages/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Messages
      summary: Get message details
      description: Get message details
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Message does not exist
    delete:
      security:
        - Bearer: []
      tags:
        - Messages
      summary: Delete a message
      description: Delete a message
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Message does not exist

  /messages/read/{id}:
    post:
      security:
        - Bearer: []
      tags:
        - Messages
      summary: Mark message as read
      description: Mark message as read
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the message
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Message does not exist

  /messages/unread:
    get:
      security:
        - Bearer: []
      tags:
        - Messages
      summary: List all unread messages
      description: List all unread messages
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: You have no unread messages

externalDocs:
  description: Find out more about Smart SMS
  url: 'https://github.com/micahoriaso/smart-sms'
